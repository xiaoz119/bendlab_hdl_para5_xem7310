#*****************************************************************************************
# Vivado (TM) v2023.1 (64-bit)
#
# bendlab_hdl_xem7310.tcl: Tcl script for re-creating project 'project_1'
#
# Generated by Vivado on Fri May 23 18:07:18 -0400 2025
# IP Build 3864474 on Sun May  7 20:36:21 MDT 2023
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************
# NOTE: In order to use this script for source control purposes, please make sure that the
#       following files are added to the source control system:-
#
# 1. This project restoration tcl script (bendlab_hdl_xem7310.tcl) that was generated.
#
# 2. The following source(s) files that were local or imported into the original project.
#    (Please see the '$orig_proj_dir' and '$origin_dir' variable setting below at the start of the script)
#
#    "h:/workspace/AXI_IIC_Ctrl/mb_xem7310/myproj/project_1.srcs/sources_1/ip/axi_iic_1/axi_iic_1.xci"
#
# 3. The following remote source files that were added to the original project:-
#
#    "H:/workspace/AXI_IIC_Ctrl/export/bendlab_hdl_ctrl_mb_zed/hw/sources_1/imports/hdl/axi4_lite_master_controller.v"
#    "H:/workspace/AXI_IIC_Ctrl/export/bendlab_hdl_ctrl_mb_zed/hw/sources_1/imports/hdl/edge_detector.v"
#    "H:/workspace/AXI_IIC_Ctrl/export/bendlab_hdl_ctrl_mb_zed/hw/sources_1/imports/hdl/fsm_axi_lite_rd.v"
#    "H:/workspace/AXI_IIC_Ctrl/export/bendlab_hdl_ctrl_mb_zed/hw/sources_1/imports/hdl/fsm_axi_lite_wr.v"
#    "H:/workspace/AXI_IIC_Ctrl/export/bendlab_hdl_ctrl_mb_zed/hw/sources_1/imports/hdl/fsm_top_level.v"
#    "H:/workspace/AXI_IIC_Ctrl/export/bendlab_hdl_ctrl_mb_zed/hw/sources_1/imports/hdl/instruction_rom_rd.v"
#    "H:/workspace/AXI_IIC_Ctrl/export/bendlab_hdl_ctrl_mb_zed/hw/sources_1/imports/hdl/ram_byte_reg.v"
#    "H:/workspace/AXI_IIC_Ctrl/export/bendlab_hdl_ctrl_mb_zed/hw/sources_1/imports/hdl/axi_i2c_ctrl_bendlab.v"
#    "H:/workspace/AXI_IIC_Ctrl/export/bendlab_hdl_ctrl_mb_zed/hw/sources_1/imports/hdl/mem/bendlab_data_read_interrupt.mem"
#    "H:/workspace/AXI_IIC_Ctrl/export/bendlab_hdl_ctrl_mb_zed/hw/sources_1/imports/hdl/mem/bendlab_data_read.mem"
#    "H:/workspace/AXI_IIC_Ctrl/export/bendlab_hdl_ctrl_mb_zed/hw/sources_1/imports/hdl/mem/bendlab_device_check.mem"
#    "H:/workspace/AXI_IIC_Ctrl/mb_xem7310/xem7310.xdc"
#
#*****************************************************************************************

# Check file required for this script exists
proc checkRequiredFiles { origin_dir} {
  set status true
  set files [list \
 "[file normalize "$origin_dir/hw/sources_1/ip/axi_iic_1/axi_iic_1.xci"]"\
  ]
  foreach ifile $files {
    if { ![file isfile $ifile] } {
      puts " Could not find local file $ifile "
      set status false
    }
  }

  set files [list \
 "[file normalize "$origin_dir/hw/sources_1/imports/hdl/axi4_lite_master_controller.v"]"\
 "[file normalize "$origin_dir/hw/sources_1/imports/hdl/edge_detector.v"]"\
 "[file normalize "$origin_dir/hw/sources_1/imports/hdl/fsm_axi_lite_rd.v"]"\
 "[file normalize "$origin_dir/hw/sources_1/imports/hdl/fsm_axi_lite_wr.v"]"\
 "[file normalize "$origin_dir/hw/sources_1/imports/hdl/fsm_top_level.v"]"\
 "[file normalize "$origin_dir/hw/sources_1/imports/hdl/instruction_rom_rd.v"]"\
 "[file normalize "$origin_dir/hw/sources_1/imports/hdl/ram_byte_reg.v"]"\
 "[file normalize "$origin_dir/hw/sources_1/imports/hdl/axi_i2c_ctrl_bendlab.v"]"\
 "[file normalize "$origin_dir/hw/sources_1/imports/hdl/mem/bendlab_data_read_interrupt.mem"]"\
 "[file normalize "$origin_dir/hw/sources_1/imports/hdl/mem/bendlab_data_read.mem"]"\
 "[file normalize "$origin_dir/hw/sources_1/imports/hdl/mem/bendlab_device_check.mem"]"\
 "[file normalize "$origin_dir/hw/constrs_1/xem7310.xdc"]"\
  ]
  foreach ifile $files {
    if { ![file isfile $ifile] } {
      puts " Could not find remote file $ifile "
      set status false
    }
  }

  return $status
}
# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir "."

# Use origin directory path location variable, if specified in the tcl shell
if { [info exists ::origin_dir_loc] } {
  set origin_dir $::origin_dir_loc
}

# Set the project name
set _xil_proj_name_ "bendlab_hdl_xem7310"

# Use project name variable, if specified in the tcl shell
if { [info exists ::user_project_name] } {
  set _xil_proj_name_ $::user_project_name
}

variable script_file
set script_file "bendlab_hdl_xem7310.tcl"

# Help information for this script
proc print_help {} {
  variable script_file
  puts "\nDescription:"
  puts "Recreate a Vivado project from this script. The created project will be"
  puts "functionally equivalent to the original project for which this script was"
  puts "generated. The script contains commands for creating a project, filesets,"
  puts "runs, adding/importing sources and setting properties on various objects.\n"
  puts "Syntax:"
  puts "$script_file"
  puts "$script_file -tclargs \[--origin_dir <path>\]"
  puts "$script_file -tclargs \[--project_name <name>\]"
  puts "$script_file -tclargs \[--help\]\n"
  puts "Usage:"
  puts "Name                   Description"
  puts "-------------------------------------------------------------------------"
  puts "\[--origin_dir <path>\]  Determine source file paths wrt this path. Default"
  puts "                       origin_dir path value is \".\", otherwise, the value"
  puts "                       that was set with the \"-paths_relative_to\" switch"
  puts "                       when this script was generated.\n"
  puts "\[--project_name <name>\] Create project with the specified name. Default"
  puts "                       name is the name of the project from where this"
  puts "                       script was generated.\n"
  puts "\[--help\]               Print help information for this script"
  puts "-------------------------------------------------------------------------\n"
  exit 0
}

if { $::argc > 0 } {
  for {set i 0} {$i < $::argc} {incr i} {
    set option [string trim [lindex $::argv $i]]
    switch -regexp -- $option {
      "--origin_dir"   { incr i; set origin_dir [lindex $::argv $i] }
      "--project_name" { incr i; set _xil_proj_name_ [lindex $::argv $i] }
      "--help"         { print_help }
      default {
        if { [regexp {^-} $option] } {
          puts "ERROR: Unknown option '$option' specified, please type '$script_file -tclargs --help' for usage info.\n"
          return 1
        }
      }
    }
  }
}

# Set the directory path for the original project from where this script was exported
# set orig_proj_dir "[file normalize "$origin_dir/../../mb_xem7310/myproj"]"

# Check for paths and files needed for project creation
set validate_required 0
if { $validate_required } {
  if { [checkRequiredFiles $origin_dir] } {
    puts "Tcl file $script_file is valid. All files required for project creation is accesable. "
  } else {
    puts "Tcl file $script_file is not valid. Not all files required for project creation is accesable. "
    return
  }
}

# Create project
create_project ${_xil_proj_name_} ./${_xil_proj_name_} -part xc7a200tfbg484-1 -force

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Reconstruct message rules
# None

# Set project properties
set obj [current_project]
# set_property -name "board_part_repo_paths" -value "C:/Users/Xiao/AppData/Roaming/Xilinx/Vivado/2023.1/xhub/board_store/xilinx_board_store" -objects $obj
set_property -name "board_part" -value "opalkelly.com:xem7310-a200:part0:1.0" -objects $obj
set_property -name "default_lib" -value "xil_defaultlib" -objects $obj
set_property -name "enable_resource_estimation" -value "0" -objects $obj
set_property -name "enable_vhdl_2008" -value "1" -objects $obj
set_property -name "ip_cache_permissions" -value "read write" -objects $obj
set_property -name "ip_output_repo" -value "$proj_dir/${_xil_proj_name_}.cache/ip" -objects $obj
set_property -name "mem.enable_memory_map_generation" -value "1" -objects $obj
set_property -name "platform.board_id" -value "xem7310-a200" -objects $obj
set_property -name "revised_directory_structure" -value "1" -objects $obj
set_property -name "sim.central_dir" -value "$proj_dir/${_xil_proj_name_}.ip_user_files" -objects $obj
set_property -name "sim.ip.auto_export_scripts" -value "1" -objects $obj
set_property -name "simulator_language" -value "Mixed" -objects $obj
set_property -name "sim_compile_state" -value "1" -objects $obj
set_property -name "webtalk.activehdl_export_sim" -value "1" -objects $obj
set_property -name "webtalk.modelsim_export_sim" -value "1" -objects $obj
set_property -name "webtalk.questa_export_sim" -value "1" -objects $obj
set_property -name "webtalk.riviera_export_sim" -value "1" -objects $obj
set_property -name "webtalk.vcs_export_sim" -value "1" -objects $obj
set_property -name "webtalk.xcelium_export_sim" -value "1" -objects $obj
set_property -name "webtalk.xsim_export_sim" -value "1" -objects $obj
set_property -name "xpm_libraries" -value "XPM_CDC XPM_MEMORY" -objects $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 [file normalize "${origin_dir}/hw/sources_1/imports/hdl/axi4_lite_master_controller.v"] \
 [file normalize "${origin_dir}/hw/sources_1/imports/hdl/edge_detector.v"] \
 [file normalize "${origin_dir}/hw/sources_1/imports/hdl/fsm_axi_lite_rd.v"] \
 [file normalize "${origin_dir}/hw/sources_1/imports/hdl/fsm_axi_lite_wr.v"] \
 [file normalize "${origin_dir}/hw/sources_1/imports/hdl/fsm_top_level.v"] \
 [file normalize "${origin_dir}/hw/sources_1/imports/hdl/instruction_rom_rd.v"] \
 [file normalize "${origin_dir}/hw/sources_1/imports/hdl/ram_byte_reg.v"] \
 [file normalize "${origin_dir}/hw/sources_1/imports/hdl/axi_i2c_ctrl_bendlab.v"] \
 [file normalize "${origin_dir}/hw/sources_1/imports/hdl/mem/bendlab_data_read_interrupt.mem"] \
 [file normalize "${origin_dir}/hw/sources_1/imports/hdl/mem/bendlab_data_read.mem"] \
 [file normalize "${origin_dir}/hw/sources_1/imports/hdl/mem/bendlab_device_check.mem"] \
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset file properties for remote files
set file "$origin_dir/hw/sources_1/imports/hdl/mem/bendlab_data_read_interrupt.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj

set file "$origin_dir/hw/sources_1/imports/hdl/mem/bendlab_data_read.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj

set file "$origin_dir/hw/sources_1/imports/hdl/mem/bendlab_device_check.mem"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj


# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
set_property -name "dataflow_viewer_settings" -value "min_width=16" -objects $obj
set_property -name "top" -value "design_1_wrapper" -objects $obj

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/hw/sources_1/ip/axi_iic_1/axi_iic_1.xci" ]\
]
set imported_files [import_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
set file "axi_iic_1/axi_iic_1.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}


# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/hw/constrs_1/xem7310.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/hw/constrs_1/xem7310.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]

# Create 'sim_1' fileset (if not found)
if {[string equal [get_filesets -quiet sim_1] ""]} {
  create_fileset -simset sim_1
}

# Set 'sim_1' fileset object
set obj [get_filesets sim_1]
# Empty (no sources present)

# Set 'sim_1' fileset properties
set obj [get_filesets sim_1]
set_property -name "top" -value "design_1_wrapper" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj

# Set 'utils_1' fileset object
set obj [get_filesets utils_1]
# Empty (no sources present)

# Set 'utils_1' fileset properties
set obj [get_filesets utils_1]


# Adding sources referenced in BDs, if not already added
# if { [get_files axi_iic_1.xci] == "" } {
#   import_files -quiet -fileset sources_1 h:/workspace/AXI_IIC_Ctrl/mb_xem7310/myproj/project_1.srcs/sources_1/ip/axi_iic_1/axi_iic_1.xci
# }
# if { [get_files axi4_lite_master_controller.v] == "" } {
#   import_files -quiet -fileset sources_1 H:/workspace/AXI_IIC_Ctrl/export/bendlab_hdl_ctrl_mb_zed/hw/sources_1/imports/hdl/axi4_lite_master_controller.v
# }
# if { [get_files edge_detector.v] == "" } {
#   import_files -quiet -fileset sources_1 H:/workspace/AXI_IIC_Ctrl/export/bendlab_hdl_ctrl_mb_zed/hw/sources_1/imports/hdl/edge_detector.v
# }
# if { [get_files fsm_axi_lite_rd.v] == "" } {
#   import_files -quiet -fileset sources_1 H:/workspace/AXI_IIC_Ctrl/export/bendlab_hdl_ctrl_mb_zed/hw/sources_1/imports/hdl/fsm_axi_lite_rd.v
# }
# if { [get_files fsm_axi_lite_wr.v] == "" } {
#   import_files -quiet -fileset sources_1 H:/workspace/AXI_IIC_Ctrl/export/bendlab_hdl_ctrl_mb_zed/hw/sources_1/imports/hdl/fsm_axi_lite_wr.v
# }
# if { [get_files fsm_top_level.v] == "" } {
#   import_files -quiet -fileset sources_1 H:/workspace/AXI_IIC_Ctrl/export/bendlab_hdl_ctrl_mb_zed/hw/sources_1/imports/hdl/fsm_top_level.v
# }
# if { [get_files instruction_rom_rd.v] == "" } {
#   import_files -quiet -fileset sources_1 H:/workspace/AXI_IIC_Ctrl/export/bendlab_hdl_ctrl_mb_zed/hw/sources_1/imports/hdl/instruction_rom_rd.v
# }
# if { [get_files ram_byte_reg.v] == "" } {
#   import_files -quiet -fileset sources_1 H:/workspace/AXI_IIC_Ctrl/export/bendlab_hdl_ctrl_mb_zed/hw/sources_1/imports/hdl/ram_byte_reg.v
# }
# if { [get_files axi_i2c_ctrl_bendlab.v] == "" } {
#   import_files -quiet -fileset sources_1 H:/workspace/AXI_IIC_Ctrl/export/bendlab_hdl_ctrl_mb_zed/hw/sources_1/imports/hdl/axi_i2c_ctrl_bendlab.v
# }
# if { [get_files axi_iic_1.xci] == "" } {
#   import_files -quiet -fileset sources_1 h:/workspace/AXI_IIC_Ctrl/mb_xem7310/myproj/project_1.srcs/sources_1/ip/axi_iic_1/axi_iic_1.xci
# }
# if { [get_files axi4_lite_master_controller.v] == "" } {
#   import_files -quiet -fileset sources_1 H:/workspace/AXI_IIC_Ctrl/export/bendlab_hdl_ctrl_mb_zed/hw/sources_1/imports/hdl/axi4_lite_master_controller.v
# }
# if { [get_files edge_detector.v] == "" } {
#   import_files -quiet -fileset sources_1 H:/workspace/AXI_IIC_Ctrl/export/bendlab_hdl_ctrl_mb_zed/hw/sources_1/imports/hdl/edge_detector.v
# }
# if { [get_files fsm_axi_lite_rd.v] == "" } {
#   import_files -quiet -fileset sources_1 H:/workspace/AXI_IIC_Ctrl/export/bendlab_hdl_ctrl_mb_zed/hw/sources_1/imports/hdl/fsm_axi_lite_rd.v
# }
# if { [get_files fsm_axi_lite_wr.v] == "" } {
#   import_files -quiet -fileset sources_1 H:/workspace/AXI_IIC_Ctrl/export/bendlab_hdl_ctrl_mb_zed/hw/sources_1/imports/hdl/fsm_axi_lite_wr.v
# }
# if { [get_files fsm_top_level.v] == "" } {
#   import_files -quiet -fileset sources_1 H:/workspace/AXI_IIC_Ctrl/export/bendlab_hdl_ctrl_mb_zed/hw/sources_1/imports/hdl/fsm_top_level.v
# }
# if { [get_files instruction_rom_rd.v] == "" } {
#   import_files -quiet -fileset sources_1 H:/workspace/AXI_IIC_Ctrl/export/bendlab_hdl_ctrl_mb_zed/hw/sources_1/imports/hdl/instruction_rom_rd.v
# }
# if { [get_files ram_byte_reg.v] == "" } {
#   import_files -quiet -fileset sources_1 H:/workspace/AXI_IIC_Ctrl/export/bendlab_hdl_ctrl_mb_zed/hw/sources_1/imports/hdl/ram_byte_reg.v
# }
# if { [get_files axi_i2c_ctrl_bendlab.v] == "" } {
#   import_files -quiet -fileset sources_1 H:/workspace/AXI_IIC_Ctrl/export/bendlab_hdl_ctrl_mb_zed/hw/sources_1/imports/hdl/axi_i2c_ctrl_bendlab.v
# }
# if { [get_files axi_iic_1.xci] == "" } {
#   import_files -quiet -fileset sources_1 h:/workspace/AXI_IIC_Ctrl/mb_xem7310/myproj/project_1.srcs/sources_1/ip/axi_iic_1/axi_iic_1.xci
# }
# if { [get_files axi4_lite_master_controller.v] == "" } {
#   import_files -quiet -fileset sources_1 H:/workspace/AXI_IIC_Ctrl/export/bendlab_hdl_ctrl_mb_zed/hw/sources_1/imports/hdl/axi4_lite_master_controller.v
# }
# if { [get_files edge_detector.v] == "" } {
#   import_files -quiet -fileset sources_1 H:/workspace/AXI_IIC_Ctrl/export/bendlab_hdl_ctrl_mb_zed/hw/sources_1/imports/hdl/edge_detector.v
# }
# if { [get_files fsm_axi_lite_rd.v] == "" } {
#   import_files -quiet -fileset sources_1 H:/workspace/AXI_IIC_Ctrl/export/bendlab_hdl_ctrl_mb_zed/hw/sources_1/imports/hdl/fsm_axi_lite_rd.v
# }
# if { [get_files fsm_axi_lite_wr.v] == "" } {
#   import_files -quiet -fileset sources_1 H:/workspace/AXI_IIC_Ctrl/export/bendlab_hdl_ctrl_mb_zed/hw/sources_1/imports/hdl/fsm_axi_lite_wr.v
# }
# if { [get_files fsm_top_level.v] == "" } {
#   import_files -quiet -fileset sources_1 H:/workspace/AXI_IIC_Ctrl/export/bendlab_hdl_ctrl_mb_zed/hw/sources_1/imports/hdl/fsm_top_level.v
# }
# if { [get_files instruction_rom_rd.v] == "" } {
#   import_files -quiet -fileset sources_1 H:/workspace/AXI_IIC_Ctrl/export/bendlab_hdl_ctrl_mb_zed/hw/sources_1/imports/hdl/instruction_rom_rd.v
# }
# if { [get_files ram_byte_reg.v] == "" } {
#   import_files -quiet -fileset sources_1 H:/workspace/AXI_IIC_Ctrl/export/bendlab_hdl_ctrl_mb_zed/hw/sources_1/imports/hdl/ram_byte_reg.v
# }
# if { [get_files axi_i2c_ctrl_bendlab.v] == "" } {
#   import_files -quiet -fileset sources_1 H:/workspace/AXI_IIC_Ctrl/export/bendlab_hdl_ctrl_mb_zed/hw/sources_1/imports/hdl/axi_i2c_ctrl_bendlab.v
# }
# if { [get_files axi_iic_1.xci] == "" } {
#   import_files -quiet -fileset sources_1 h:/workspace/AXI_IIC_Ctrl/mb_xem7310/myproj/project_1.srcs/sources_1/ip/axi_iic_1/axi_iic_1.xci
# }
# if { [get_files axi4_lite_master_controller.v] == "" } {
#   import_files -quiet -fileset sources_1 H:/workspace/AXI_IIC_Ctrl/export/bendlab_hdl_ctrl_mb_zed/hw/sources_1/imports/hdl/axi4_lite_master_controller.v
# }
# if { [get_files edge_detector.v] == "" } {
#   import_files -quiet -fileset sources_1 H:/workspace/AXI_IIC_Ctrl/export/bendlab_hdl_ctrl_mb_zed/hw/sources_1/imports/hdl/edge_detector.v
# }
# if { [get_files fsm_axi_lite_rd.v] == "" } {
#   import_files -quiet -fileset sources_1 H:/workspace/AXI_IIC_Ctrl/export/bendlab_hdl_ctrl_mb_zed/hw/sources_1/imports/hdl/fsm_axi_lite_rd.v
# }
# if { [get_files fsm_axi_lite_wr.v] == "" } {
#   import_files -quiet -fileset sources_1 H:/workspace/AXI_IIC_Ctrl/export/bendlab_hdl_ctrl_mb_zed/hw/sources_1/imports/hdl/fsm_axi_lite_wr.v
# }
# if { [get_files fsm_top_level.v] == "" } {
#   import_files -quiet -fileset sources_1 H:/workspace/AXI_IIC_Ctrl/export/bendlab_hdl_ctrl_mb_zed/hw/sources_1/imports/hdl/fsm_top_level.v
# }
# if { [get_files instruction_rom_rd.v] == "" } {
#   import_files -quiet -fileset sources_1 H:/workspace/AXI_IIC_Ctrl/export/bendlab_hdl_ctrl_mb_zed/hw/sources_1/imports/hdl/instruction_rom_rd.v
# }
# if { [get_files ram_byte_reg.v] == "" } {
#   import_files -quiet -fileset sources_1 H:/workspace/AXI_IIC_Ctrl/export/bendlab_hdl_ctrl_mb_zed/hw/sources_1/imports/hdl/ram_byte_reg.v
# }
# if { [get_files axi_i2c_ctrl_bendlab.v] == "" } {
#   import_files -quiet -fileset sources_1 H:/workspace/AXI_IIC_Ctrl/export/bendlab_hdl_ctrl_mb_zed/hw/sources_1/imports/hdl/axi_i2c_ctrl_bendlab.v
# }
# if { [get_files axi_iic_1.xci] == "" } {
#   import_files -quiet -fileset sources_1 h:/workspace/AXI_IIC_Ctrl/mb_xem7310/myproj/project_1.srcs/sources_1/ip/axi_iic_1/axi_iic_1.xci
# }
# if { [get_files axi4_lite_master_controller.v] == "" } {
#   import_files -quiet -fileset sources_1 H:/workspace/AXI_IIC_Ctrl/export/bendlab_hdl_ctrl_mb_zed/hw/sources_1/imports/hdl/axi4_lite_master_controller.v
# }
# if { [get_files edge_detector.v] == "" } {
#   import_files -quiet -fileset sources_1 H:/workspace/AXI_IIC_Ctrl/export/bendlab_hdl_ctrl_mb_zed/hw/sources_1/imports/hdl/edge_detector.v
# }
# if { [get_files fsm_axi_lite_rd.v] == "" } {
#   import_files -quiet -fileset sources_1 H:/workspace/AXI_IIC_Ctrl/export/bendlab_hdl_ctrl_mb_zed/hw/sources_1/imports/hdl/fsm_axi_lite_rd.v
# }
# if { [get_files fsm_axi_lite_wr.v] == "" } {
#   import_files -quiet -fileset sources_1 H:/workspace/AXI_IIC_Ctrl/export/bendlab_hdl_ctrl_mb_zed/hw/sources_1/imports/hdl/fsm_axi_lite_wr.v
# }
# if { [get_files fsm_top_level.v] == "" } {
#   import_files -quiet -fileset sources_1 H:/workspace/AXI_IIC_Ctrl/export/bendlab_hdl_ctrl_mb_zed/hw/sources_1/imports/hdl/fsm_top_level.v
# }
# if { [get_files instruction_rom_rd.v] == "" } {
#   import_files -quiet -fileset sources_1 H:/workspace/AXI_IIC_Ctrl/export/bendlab_hdl_ctrl_mb_zed/hw/sources_1/imports/hdl/instruction_rom_rd.v
# }
# if { [get_files ram_byte_reg.v] == "" } {
#   import_files -quiet -fileset sources_1 H:/workspace/AXI_IIC_Ctrl/export/bendlab_hdl_ctrl_mb_zed/hw/sources_1/imports/hdl/ram_byte_reg.v
# }
# if { [get_files axi_i2c_ctrl_bendlab.v] == "" } {
#   import_files -quiet -fileset sources_1 H:/workspace/AXI_IIC_Ctrl/export/bendlab_hdl_ctrl_mb_zed/hw/sources_1/imports/hdl/axi_i2c_ctrl_bendlab.v
# }


# Proc to create BD design_1
proc cr_bd_design_1 { parentCell } {
# The design that will be created by this Tcl proc contains the following 
# module references:
# axi_i2c_ctrl_bendlab, axi_i2c_ctrl_bendlab, axi_i2c_ctrl_bendlab, axi_i2c_ctrl_bendlab, axi_i2c_ctrl_bendlab



  # CHANGE DESIGN NAME HERE
  set design_name design_1

  common::send_gid_msg -ssname BD::TCL -id 2010 -severity "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  xilinx.com:ip:microblaze:11.0\
  xilinx.com:ip:mdm:3.2\
  xilinx.com:ip:clk_wiz:6.0\
  xilinx.com:ip:proc_sys_reset:5.0\
  xilinx.com:ip:xlconstant:1.1\
  xilinx.com:ip:axi_uartlite:2.0\
  xilinx.com:ip:axi_gpio:2.0\
  xilinx.com:ip:lmb_v10:3.0\
  xilinx.com:ip:lmb_bram_if_cntlr:4.0\
  xilinx.com:ip:blk_mem_gen:8.4\
  "

   set list_ips_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2011 -severity "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2012 -severity "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  ##################################################################
  # CHECK Modules
  ##################################################################
  set bCheckModules 1
  if { $bCheckModules == 1 } {
     set list_check_mods "\ 
  axi_i2c_ctrl_bendlab\
  axi_i2c_ctrl_bendlab\
  axi_i2c_ctrl_bendlab\
  axi_i2c_ctrl_bendlab\
  axi_i2c_ctrl_bendlab\
  "

   set list_mods_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2020 -severity "INFO" "Checking if the following modules exist in the project's sources: $list_check_mods ."

   foreach mod_vlnv $list_check_mods {
      if { [can_resolve_reference $mod_vlnv] == 0 } {
         lappend list_mods_missing $mod_vlnv
      }
   }

   if { $list_mods_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2021 -severity "ERROR" "The following module(s) are not found in the project: $list_mods_missing" }
      common::send_gid_msg -ssname BD::TCL -id 2022 -severity "INFO" "Please add source files for the missing module(s) above."
      set bCheckIPsPassed 0
   }
}

  if { $bCheckIPsPassed != 1 } {
    common::send_gid_msg -ssname BD::TCL -id 2023 -severity "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  
# Hierarchical cell: microblaze_0_local_memory
proc create_hier_cell_microblaze_0_local_memory { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_microblaze_0_local_memory() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode MirroredMaster -vlnv xilinx.com:interface:lmb_rtl:1.0 DLMB

  create_bd_intf_pin -mode MirroredMaster -vlnv xilinx.com:interface:lmb_rtl:1.0 ILMB


  # Create pins
  create_bd_pin -dir I -type clk LMB_Clk
  create_bd_pin -dir I -type rst SYS_Rst

  # Create instance: dlmb_v10, and set properties
  set dlmb_v10 [ create_bd_cell -type ip -vlnv xilinx.com:ip:lmb_v10:3.0 dlmb_v10 ]

  # Create instance: ilmb_v10, and set properties
  set ilmb_v10 [ create_bd_cell -type ip -vlnv xilinx.com:ip:lmb_v10:3.0 ilmb_v10 ]

  # Create instance: dlmb_bram_if_cntlr, and set properties
  set dlmb_bram_if_cntlr [ create_bd_cell -type ip -vlnv xilinx.com:ip:lmb_bram_if_cntlr:4.0 dlmb_bram_if_cntlr ]
  set_property CONFIG.C_ECC {0} $dlmb_bram_if_cntlr


  # Create instance: ilmb_bram_if_cntlr, and set properties
  set ilmb_bram_if_cntlr [ create_bd_cell -type ip -vlnv xilinx.com:ip:lmb_bram_if_cntlr:4.0 ilmb_bram_if_cntlr ]
  set_property CONFIG.C_ECC {0} $ilmb_bram_if_cntlr


  # Create instance: lmb_bram, and set properties
  set lmb_bram [ create_bd_cell -type ip -vlnv xilinx.com:ip:blk_mem_gen:8.4 lmb_bram ]
  set_property -dict [list \
    CONFIG.Memory_Type {True_Dual_Port_RAM} \
    CONFIG.use_bram_block {BRAM_Controller} \
  ] $lmb_bram


  # Create interface connections
  connect_bd_intf_net -intf_net microblaze_0_dlmb [get_bd_intf_pins dlmb_v10/LMB_M] [get_bd_intf_pins DLMB]
  connect_bd_intf_net -intf_net microblaze_0_dlmb_bus [get_bd_intf_pins dlmb_v10/LMB_Sl_0] [get_bd_intf_pins dlmb_bram_if_cntlr/SLMB]
  connect_bd_intf_net -intf_net microblaze_0_dlmb_cntlr [get_bd_intf_pins dlmb_bram_if_cntlr/BRAM_PORT] [get_bd_intf_pins lmb_bram/BRAM_PORTA]
  connect_bd_intf_net -intf_net microblaze_0_ilmb [get_bd_intf_pins ilmb_v10/LMB_M] [get_bd_intf_pins ILMB]
  connect_bd_intf_net -intf_net microblaze_0_ilmb_bus [get_bd_intf_pins ilmb_v10/LMB_Sl_0] [get_bd_intf_pins ilmb_bram_if_cntlr/SLMB]
  connect_bd_intf_net -intf_net microblaze_0_ilmb_cntlr [get_bd_intf_pins ilmb_bram_if_cntlr/BRAM_PORT] [get_bd_intf_pins lmb_bram/BRAM_PORTB]

  # Create port connections
  connect_bd_net -net SYS_Rst_1 [get_bd_pins SYS_Rst] [get_bd_pins dlmb_v10/SYS_Rst] [get_bd_pins dlmb_bram_if_cntlr/LMB_Rst] [get_bd_pins ilmb_v10/SYS_Rst] [get_bd_pins ilmb_bram_if_cntlr/LMB_Rst]
  connect_bd_net -net microblaze_0_Clk [get_bd_pins LMB_Clk] [get_bd_pins dlmb_v10/LMB_Clk] [get_bd_pins dlmb_bram_if_cntlr/LMB_Clk] [get_bd_pins ilmb_v10/LMB_Clk] [get_bd_pins ilmb_bram_if_cntlr/LMB_Clk]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports
  set uart_rtl [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:uart_rtl:1.0 uart_rtl ]

  set fixed_200mhz [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 fixed_200mhz ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {200000000} \
   ] $fixed_200mhz


  # Create ports
  set bl_L0 [ create_bd_port -dir I -type intr bl_L0 ]
  set iic_bendlab_L0_scl_io [ create_bd_port -dir IO -type data iic_bendlab_L0_scl_io ]
  set iic_bendlab_L0_sda_io [ create_bd_port -dir IO iic_bendlab_L0_sda_io ]
  set status_LEDs [ create_bd_port -dir O -from 7 -to 0 -type data status_LEDs ]
  set bl_L1 [ create_bd_port -dir I -type intr bl_L1 ]
  set bl_L2 [ create_bd_port -dir I -type intr bl_L2 ]
  set bl_L3 [ create_bd_port -dir I -type intr bl_L3 ]
  set bl_L4 [ create_bd_port -dir I -type intr bl_L4 ]
  set iic_bendlab_L1_scl_io [ create_bd_port -dir IO -type data iic_bendlab_L1_scl_io ]
  set iic_bendlab_L1_sda_io [ create_bd_port -dir IO iic_bendlab_L1_sda_io ]
  set iic_bendlab_L2_scl_io [ create_bd_port -dir IO -type data iic_bendlab_L2_scl_io ]
  set iic_bendlab_L2_sda_io [ create_bd_port -dir IO iic_bendlab_L2_sda_io ]
  set iic_bendlab_L3_scl_io [ create_bd_port -dir IO -type data iic_bendlab_L3_scl_io ]
  set iic_bendlab_L3_sda_io [ create_bd_port -dir IO iic_bendlab_L3_sda_io ]
  set iic_bendlab_L4_scl_io [ create_bd_port -dir IO -type data iic_bendlab_L4_scl_io ]
  set iic_bendlab_L4_sda_io [ create_bd_port -dir IO iic_bendlab_L4_sda_io ]

  # Create instance: microblaze_0, and set properties
  set microblaze_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:microblaze:11.0 microblaze_0 ]
  set_property -dict [list \
    CONFIG.C_DEBUG_ENABLED {1} \
    CONFIG.C_D_AXI {1} \
    CONFIG.C_D_LMB {1} \
    CONFIG.C_I_LMB {1} \
  ] $microblaze_0


  # Create instance: microblaze_0_local_memory
  create_hier_cell_microblaze_0_local_memory [current_bd_instance .] microblaze_0_local_memory

  # Create instance: mdm_1, and set properties
  set mdm_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:mdm:3.2 mdm_1 ]
  set_property -dict [list \
    CONFIG.C_ADDR_SIZE {32} \
    CONFIG.C_M_AXI_ADDR_WIDTH {32} \
    CONFIG.C_USE_UART {1} \
  ] $mdm_1


  # Create instance: clk_wiz_1, and set properties
  set clk_wiz_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:clk_wiz:6.0 clk_wiz_1 ]
  set_property -dict [list \
    CONFIG.CLK_IN1_BOARD_INTERFACE {fixed_200mhz} \
    CONFIG.PRIM_SOURCE {Differential_clock_capable_pin} \
    CONFIG.USE_BOARD_FLOW {true} \
  ] $clk_wiz_1


  # Create instance: rst_clk_wiz_1_100M, and set properties
  set rst_clk_wiz_1_100M [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 rst_clk_wiz_1_100M ]

  # Create instance: xlconstant_0, and set properties
  set xlconstant_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_0 ]

  # Create instance: axi_uartlite_0, and set properties
  set axi_uartlite_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_uartlite:2.0 axi_uartlite_0 ]
  set_property CONFIG.C_BAUDRATE {115200} $axi_uartlite_0


  # Create instance: axi_gpio_bl_0, and set properties
  set axi_gpio_bl_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio:2.0 axi_gpio_bl_0 ]
  set_property CONFIG.C_ALL_INPUTS {1} $axi_gpio_bl_0


  # Create instance: microblaze_0_axi_periph, and set properties
  set microblaze_0_axi_periph [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_interconnect:2.1 microblaze_0_axi_periph ]
  set_property CONFIG.NUM_MI {7} $microblaze_0_axi_periph


  # Create instance: axi_i2c_ctrl_bendlab_0, and set properties
  set block_name axi_i2c_ctrl_bendlab
  set block_cell_name axi_i2c_ctrl_bendlab_0
  if { [catch {set axi_i2c_ctrl_bendlab_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axi_i2c_ctrl_bendlab_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: axi_gpio_bl_1, and set properties
  set axi_gpio_bl_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio:2.0 axi_gpio_bl_1 ]
  set_property CONFIG.C_ALL_INPUTS {1} $axi_gpio_bl_1


  # Create instance: axi_i2c_ctrl_bendlab_1, and set properties
  set block_name axi_i2c_ctrl_bendlab
  set block_cell_name axi_i2c_ctrl_bendlab_1
  if { [catch {set axi_i2c_ctrl_bendlab_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axi_i2c_ctrl_bendlab_1 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: axi_gpio_bl_2, and set properties
  set axi_gpio_bl_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio:2.0 axi_gpio_bl_2 ]
  set_property CONFIG.C_ALL_INPUTS {1} $axi_gpio_bl_2


  # Create instance: axi_i2c_ctrl_bendlab_2, and set properties
  set block_name axi_i2c_ctrl_bendlab
  set block_cell_name axi_i2c_ctrl_bendlab_2
  if { [catch {set axi_i2c_ctrl_bendlab_2 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axi_i2c_ctrl_bendlab_2 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: axi_gpio_bl_3, and set properties
  set axi_gpio_bl_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio:2.0 axi_gpio_bl_3 ]
  set_property CONFIG.C_ALL_INPUTS {1} $axi_gpio_bl_3


  # Create instance: axi_i2c_ctrl_bendlab_3, and set properties
  set block_name axi_i2c_ctrl_bendlab
  set block_cell_name axi_i2c_ctrl_bendlab_3
  if { [catch {set axi_i2c_ctrl_bendlab_3 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axi_i2c_ctrl_bendlab_3 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: axi_gpio_bl_4, and set properties
  set axi_gpio_bl_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio:2.0 axi_gpio_bl_4 ]
  set_property CONFIG.C_ALL_INPUTS {1} $axi_gpio_bl_4


  # Create instance: axi_i2c_ctrl_bendlab_4, and set properties
  set block_name axi_i2c_ctrl_bendlab
  set block_cell_name axi_i2c_ctrl_bendlab_4
  if { [catch {set axi_i2c_ctrl_bendlab_4 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axi_i2c_ctrl_bendlab_4 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create interface connections
  connect_bd_intf_net -intf_net axi_uartlite_0_UART [get_bd_intf_ports uart_rtl] [get_bd_intf_pins axi_uartlite_0/UART]
  connect_bd_intf_net -intf_net fixed_200mhz_1 [get_bd_intf_ports fixed_200mhz] [get_bd_intf_pins clk_wiz_1/CLK_IN1_D]
  connect_bd_intf_net -intf_net microblaze_0_M_AXI_DP [get_bd_intf_pins microblaze_0/M_AXI_DP] [get_bd_intf_pins microblaze_0_axi_periph/S00_AXI]
  connect_bd_intf_net -intf_net microblaze_0_axi_periph_M00_AXI [get_bd_intf_pins microblaze_0_axi_periph/M00_AXI] [get_bd_intf_pins axi_gpio_bl_0/S_AXI]
  connect_bd_intf_net -intf_net microblaze_0_axi_periph_M01_AXI [get_bd_intf_pins microblaze_0_axi_periph/M01_AXI] [get_bd_intf_pins axi_uartlite_0/S_AXI]
  connect_bd_intf_net -intf_net microblaze_0_axi_periph_M02_AXI [get_bd_intf_pins microblaze_0_axi_periph/M02_AXI] [get_bd_intf_pins mdm_1/S_AXI]
  connect_bd_intf_net -intf_net microblaze_0_axi_periph_M03_AXI [get_bd_intf_pins microblaze_0_axi_periph/M03_AXI] [get_bd_intf_pins axi_gpio_bl_1/S_AXI]
  connect_bd_intf_net -intf_net microblaze_0_axi_periph_M04_AXI [get_bd_intf_pins microblaze_0_axi_periph/M04_AXI] [get_bd_intf_pins axi_gpio_bl_2/S_AXI]
  connect_bd_intf_net -intf_net microblaze_0_axi_periph_M05_AXI [get_bd_intf_pins microblaze_0_axi_periph/M05_AXI] [get_bd_intf_pins axi_gpio_bl_3/S_AXI]
  connect_bd_intf_net -intf_net microblaze_0_axi_periph_M06_AXI [get_bd_intf_pins microblaze_0_axi_periph/M06_AXI] [get_bd_intf_pins axi_gpio_bl_4/S_AXI]
  connect_bd_intf_net -intf_net microblaze_0_debug [get_bd_intf_pins mdm_1/MBDEBUG_0] [get_bd_intf_pins microblaze_0/DEBUG]
  connect_bd_intf_net -intf_net microblaze_0_dlmb_1 [get_bd_intf_pins microblaze_0/DLMB] [get_bd_intf_pins microblaze_0_local_memory/DLMB]
  connect_bd_intf_net -intf_net microblaze_0_ilmb_1 [get_bd_intf_pins microblaze_0/ILMB] [get_bd_intf_pins microblaze_0_local_memory/ILMB]

  # Create port connections
  connect_bd_net -net Net [get_bd_ports iic_bendlab_L0_scl_io] [get_bd_pins axi_i2c_ctrl_bendlab_0/iic_bl_scl_io]
  connect_bd_net -net Net1 [get_bd_ports iic_bendlab_L0_sda_io] [get_bd_pins axi_i2c_ctrl_bendlab_0/iic_bl_sda_io]
  connect_bd_net -net Net2 [get_bd_ports iic_bendlab_L1_scl_io] [get_bd_pins axi_i2c_ctrl_bendlab_1/iic_bl_scl_io]
  connect_bd_net -net Net3 [get_bd_ports iic_bendlab_L1_sda_io] [get_bd_pins axi_i2c_ctrl_bendlab_1/iic_bl_sda_io]
  connect_bd_net -net Net4 [get_bd_ports iic_bendlab_L2_scl_io] [get_bd_pins axi_i2c_ctrl_bendlab_2/iic_bl_scl_io]
  connect_bd_net -net Net5 [get_bd_ports iic_bendlab_L2_sda_io] [get_bd_pins axi_i2c_ctrl_bendlab_2/iic_bl_sda_io]
  connect_bd_net -net Net6 [get_bd_ports iic_bendlab_L3_scl_io] [get_bd_pins axi_i2c_ctrl_bendlab_3/iic_bl_scl_io]
  connect_bd_net -net Net7 [get_bd_ports iic_bendlab_L3_sda_io] [get_bd_pins axi_i2c_ctrl_bendlab_3/iic_bl_sda_io]
  connect_bd_net -net Net8 [get_bd_ports iic_bendlab_L4_scl_io] [get_bd_pins axi_i2c_ctrl_bendlab_4/iic_bl_scl_io]
  connect_bd_net -net Net9 [get_bd_ports iic_bendlab_L4_sda_io] [get_bd_pins axi_i2c_ctrl_bendlab_4/iic_bl_sda_io]
  connect_bd_net -net axi_i2c_ctrl_bendlab_0_bl_data_o [get_bd_pins axi_i2c_ctrl_bendlab_0/bl_data_o] [get_bd_pins axi_gpio_bl_0/gpio_io_i]
  connect_bd_net -net axi_i2c_ctrl_bendlab_0_led [get_bd_pins axi_i2c_ctrl_bendlab_0/led] [get_bd_ports status_LEDs]
  connect_bd_net -net axi_i2c_ctrl_bendlab_1_bl_data_o [get_bd_pins axi_i2c_ctrl_bendlab_1/bl_data_o] [get_bd_pins axi_gpio_bl_1/gpio_io_i]
  connect_bd_net -net axi_i2c_ctrl_bendlab_2_bl_data_o [get_bd_pins axi_i2c_ctrl_bendlab_2/bl_data_o] [get_bd_pins axi_gpio_bl_2/gpio_io_i]
  connect_bd_net -net axi_i2c_ctrl_bendlab_3_bl_data_o [get_bd_pins axi_i2c_ctrl_bendlab_3/bl_data_o] [get_bd_pins axi_gpio_bl_3/gpio_io_i]
  connect_bd_net -net axi_i2c_ctrl_bendlab_4_bl_data_o [get_bd_pins axi_i2c_ctrl_bendlab_4/bl_data_o] [get_bd_pins axi_gpio_bl_4/gpio_io_i]
  connect_bd_net -net bl_L0_1 [get_bd_ports bl_L0] [get_bd_pins axi_i2c_ctrl_bendlab_0/intr_bl]
  connect_bd_net -net bl_L1_1 [get_bd_ports bl_L1] [get_bd_pins axi_i2c_ctrl_bendlab_1/intr_bl]
  connect_bd_net -net bl_L2_1 [get_bd_ports bl_L2] [get_bd_pins axi_i2c_ctrl_bendlab_2/intr_bl]
  connect_bd_net -net bl_L3_1 [get_bd_ports bl_L3] [get_bd_pins axi_i2c_ctrl_bendlab_3/intr_bl]
  connect_bd_net -net bl_L4_1 [get_bd_ports bl_L4] [get_bd_pins axi_i2c_ctrl_bendlab_4/intr_bl]
  connect_bd_net -net clk_wiz_1_locked [get_bd_pins clk_wiz_1/locked] [get_bd_pins rst_clk_wiz_1_100M/dcm_locked]
  connect_bd_net -net mdm_1_debug_sys_rst [get_bd_pins mdm_1/Debug_SYS_Rst] [get_bd_pins rst_clk_wiz_1_100M/mb_debug_sys_rst] [get_bd_pins clk_wiz_1/reset]
  connect_bd_net -net microblaze_0_Clk [get_bd_pins clk_wiz_1/clk_out1] [get_bd_pins microblaze_0/Clk] [get_bd_pins microblaze_0_local_memory/LMB_Clk] [get_bd_pins mdm_1/S_AXI_ACLK] [get_bd_pins rst_clk_wiz_1_100M/slowest_sync_clk] [get_bd_pins microblaze_0_axi_periph/S00_ACLK] [get_bd_pins axi_gpio_bl_0/s_axi_aclk] [get_bd_pins microblaze_0_axi_periph/M00_ACLK] [get_bd_pins microblaze_0_axi_periph/ACLK] [get_bd_pins axi_uartlite_0/s_axi_aclk] [get_bd_pins microblaze_0_axi_periph/M01_ACLK] [get_bd_pins microblaze_0_axi_periph/M02_ACLK] [get_bd_pins microblaze_0_axi_periph/M03_ACLK] [get_bd_pins axi_i2c_ctrl_bendlab_0/clk] [get_bd_pins axi_gpio_bl_1/s_axi_aclk] [get_bd_pins axi_gpio_bl_2/s_axi_aclk] [get_bd_pins microblaze_0_axi_periph/M04_ACLK] [get_bd_pins axi_gpio_bl_3/s_axi_aclk] [get_bd_pins microblaze_0_axi_periph/M05_ACLK] [get_bd_pins axi_gpio_bl_4/s_axi_aclk] [get_bd_pins microblaze_0_axi_periph/M06_ACLK] [get_bd_pins axi_i2c_ctrl_bendlab_1/clk] [get_bd_pins axi_i2c_ctrl_bendlab_2/clk] [get_bd_pins axi_i2c_ctrl_bendlab_3/clk] [get_bd_pins axi_i2c_ctrl_bendlab_4/clk]
  connect_bd_net -net rst_clk_wiz_1_100M_bus_struct_reset [get_bd_pins rst_clk_wiz_1_100M/bus_struct_reset] [get_bd_pins microblaze_0_local_memory/SYS_Rst]
  connect_bd_net -net rst_clk_wiz_1_100M_mb_reset [get_bd_pins rst_clk_wiz_1_100M/mb_reset] [get_bd_pins microblaze_0/Reset]
  connect_bd_net -net rst_clk_wiz_1_100M_peripheral_aresetn [get_bd_pins rst_clk_wiz_1_100M/peripheral_aresetn] [get_bd_pins mdm_1/S_AXI_ARESETN] [get_bd_pins microblaze_0_axi_periph/S00_ARESETN] [get_bd_pins axi_gpio_bl_0/s_axi_aresetn] [get_bd_pins microblaze_0_axi_periph/M00_ARESETN] [get_bd_pins microblaze_0_axi_periph/ARESETN] [get_bd_pins axi_uartlite_0/s_axi_aresetn] [get_bd_pins microblaze_0_axi_periph/M01_ARESETN] [get_bd_pins microblaze_0_axi_periph/M02_ARESETN] [get_bd_pins microblaze_0_axi_periph/M03_ARESETN] [get_bd_pins axi_gpio_bl_1/s_axi_aresetn] [get_bd_pins axi_gpio_bl_2/s_axi_aresetn] [get_bd_pins microblaze_0_axi_periph/M04_ARESETN] [get_bd_pins axi_gpio_bl_3/s_axi_aresetn] [get_bd_pins microblaze_0_axi_periph/M05_ARESETN] [get_bd_pins axi_gpio_bl_4/s_axi_aresetn] [get_bd_pins microblaze_0_axi_periph/M06_ARESETN]
  connect_bd_net -net rst_clk_wiz_1_100M_peripheral_reset [get_bd_pins rst_clk_wiz_1_100M/peripheral_reset] [get_bd_pins axi_i2c_ctrl_bendlab_0/rst] [get_bd_pins axi_i2c_ctrl_bendlab_1/rst] [get_bd_pins axi_i2c_ctrl_bendlab_2/rst] [get_bd_pins axi_i2c_ctrl_bendlab_3/rst] [get_bd_pins axi_i2c_ctrl_bendlab_4/rst]
  connect_bd_net -net xlconstant_0_dout [get_bd_pins xlconstant_0/dout] [get_bd_pins rst_clk_wiz_1_100M/ext_reset_in]

  # Create address segments
  assign_bd_address -offset 0x40000000 -range 0x00010000 -target_address_space [get_bd_addr_spaces microblaze_0/Data] [get_bd_addr_segs axi_gpio_bl_0/S_AXI/Reg] -force
  assign_bd_address -offset 0x40010000 -range 0x00010000 -target_address_space [get_bd_addr_spaces microblaze_0/Data] [get_bd_addr_segs axi_gpio_bl_1/S_AXI/Reg] -force
  assign_bd_address -offset 0x40020000 -range 0x00010000 -target_address_space [get_bd_addr_spaces microblaze_0/Data] [get_bd_addr_segs axi_gpio_bl_2/S_AXI/Reg] -force
  assign_bd_address -offset 0x40030000 -range 0x00010000 -target_address_space [get_bd_addr_spaces microblaze_0/Data] [get_bd_addr_segs axi_gpio_bl_3/S_AXI/Reg] -force
  assign_bd_address -offset 0x40040000 -range 0x00010000 -target_address_space [get_bd_addr_spaces microblaze_0/Data] [get_bd_addr_segs axi_gpio_bl_4/S_AXI/Reg] -force
  assign_bd_address -offset 0x40600000 -range 0x00010000 -target_address_space [get_bd_addr_spaces microblaze_0/Data] [get_bd_addr_segs axi_uartlite_0/S_AXI/Reg] -force
  assign_bd_address -offset 0x00000000 -range 0x00004000 -target_address_space [get_bd_addr_spaces microblaze_0/Data] [get_bd_addr_segs microblaze_0_local_memory/dlmb_bram_if_cntlr/SLMB/Mem] -force
  assign_bd_address -offset 0x41400000 -range 0x00001000 -target_address_space [get_bd_addr_spaces microblaze_0/Data] [get_bd_addr_segs mdm_1/S_AXI/Reg] -force
  assign_bd_address -offset 0x00000000 -range 0x00004000 -target_address_space [get_bd_addr_spaces microblaze_0/Instruction] [get_bd_addr_segs microblaze_0_local_memory/ilmb_bram_if_cntlr/SLMB/Mem] -force

  # Perform GUI Layout
  regenerate_bd_layout -layout_string {
   "ActiveEmotionalView":"Default View",
   "Default View_ScaleFactor":"0.517533",
   "Default View_TopLeft":"-137,-108",
   "ExpandedHierarchyInLayout":"",
   "guistr":"# # String gsaved with Nlview 7.5.8 2022-09-21 7111 VDI=41 GEI=38 GUI=JA:10.0
#  -string -flagsOSRD
preplace port uart_rtl -pg 1 -lvl 7 -x 2220 -y 290 -defaultsOSRD
preplace port fixed_200mhz -pg 1 -lvl 0 -x 0 -y 280 -defaultsOSRD
preplace port port-id_bl_L0 -pg 1 -lvl 0 -x 0 -y 950 -defaultsOSRD
preplace port port-id_iic_bendlab_L0_scl_io -pg 1 -lvl 7 -x 2220 -y 900 -defaultsOSRD
preplace port port-id_iic_bendlab_L0_sda_io -pg 1 -lvl 7 -x 2220 -y 920 -defaultsOSRD
preplace port port-id_bl_L1 -pg 1 -lvl 0 -x 0 -y 1110 -defaultsOSRD
preplace port port-id_bl_L2 -pg 1 -lvl 0 -x 0 -y 1270 -defaultsOSRD
preplace port port-id_bl_L3 -pg 1 -lvl 0 -x 0 -y 1430 -defaultsOSRD
preplace port port-id_bl_L4 -pg 1 -lvl 0 -x 0 -y 1590 -defaultsOSRD
preplace port port-id_iic_bendlab_L1_scl_io -pg 1 -lvl 7 -x 2220 -y 1060 -defaultsOSRD
preplace port port-id_iic_bendlab_L1_sda_io -pg 1 -lvl 7 -x 2220 -y 1080 -defaultsOSRD
preplace port port-id_iic_bendlab_L2_scl_io -pg 1 -lvl 7 -x 2220 -y 1220 -defaultsOSRD
preplace port port-id_iic_bendlab_L2_sda_io -pg 1 -lvl 7 -x 2220 -y 1240 -defaultsOSRD
preplace port port-id_iic_bendlab_L3_scl_io -pg 1 -lvl 7 -x 2220 -y 1380 -defaultsOSRD
preplace port port-id_iic_bendlab_L3_sda_io -pg 1 -lvl 7 -x 2220 -y 1400 -defaultsOSRD
preplace port port-id_iic_bendlab_L4_scl_io -pg 1 -lvl 7 -x 2220 -y 1540 -defaultsOSRD
preplace port port-id_iic_bendlab_L4_sda_io -pg 1 -lvl 7 -x 2220 -y 1560 -defaultsOSRD
preplace portBus status_LEDs -pg 1 -lvl 7 -x 2220 -y 940 -defaultsOSRD
preplace inst microblaze_0 -pg 1 -lvl 4 -x 1200 -y 100 -defaultsOSRD
preplace inst microblaze_0_local_memory -pg 1 -lvl 5 -x 1620 -y 110 -defaultsOSRD
preplace inst mdm_1 -pg 1 -lvl 3 -x 770 -y 120 -defaultsOSRD
preplace inst clk_wiz_1 -pg 1 -lvl 1 -x 130 -y 290 -defaultsOSRD
preplace inst rst_clk_wiz_1_100M -pg 1 -lvl 2 -x 420 -y 260 -defaultsOSRD
preplace inst xlconstant_0 -pg 1 -lvl 1 -x 130 -y 180 -defaultsOSRD
preplace inst axi_uartlite_0 -pg 1 -lvl 6 -x 1990 -y 300 -defaultsOSRD
preplace inst axi_gpio_bl_0 -pg 1 -lvl 6 -x 1990 -y 80 -defaultsOSRD
preplace inst microblaze_0_axi_periph -pg 1 -lvl 5 -x 1620 -y 460 -defaultsOSRD
preplace inst axi_i2c_ctrl_bendlab_0 -pg 1 -lvl 6 -x 1990 -y 1010 -defaultsOSRD
preplace inst axi_gpio_bl_1 -pg 1 -lvl 6 -x 1990 -y 440 -defaultsOSRD
preplace inst axi_i2c_ctrl_bendlab_1 -pg 1 -lvl 6 -x 1990 -y 1170 -defaultsOSRD
preplace inst axi_gpio_bl_2 -pg 1 -lvl 6 -x 1990 -y 580 -defaultsOSRD
preplace inst axi_i2c_ctrl_bendlab_2 -pg 1 -lvl 6 -x 1990 -y 1330 -defaultsOSRD
preplace inst axi_gpio_bl_3 -pg 1 -lvl 6 -x 1990 -y 720 -defaultsOSRD
preplace inst axi_i2c_ctrl_bendlab_3 -pg 1 -lvl 6 -x 1990 -y 1490 -defaultsOSRD
preplace inst axi_gpio_bl_4 -pg 1 -lvl 6 -x 1990 -y 860 -defaultsOSRD
preplace inst axi_i2c_ctrl_bendlab_4 -pg 1 -lvl 6 -x 1990 -y 1650 -defaultsOSRD
preplace netloc clk_wiz_1_locked 1 1 1 N 300
preplace netloc mdm_1_debug_sys_rst 1 0 4 20 360 250 360 NJ 360 920
preplace netloc microblaze_0_Clk 1 1 5 240 160 620 200 960 200 1470 190 1810
preplace netloc rst_clk_wiz_1_100M_bus_struct_reset 1 2 3 590J 30 950J 190 1460
preplace netloc rst_clk_wiz_1_100M_mb_reset 1 2 2 NJ 220 940
preplace netloc rst_clk_wiz_1_100M_peripheral_aresetn 1 2 4 610 40 930J 210 1440 210 1850
preplace netloc xlconstant_0_dout 1 1 1 250 180n
preplace netloc bl_L0_1 1 0 6 NJ 950 NJ 950 NJ 950 NJ 950 NJ 950 1800J
preplace netloc rst_clk_wiz_1_100M_peripheral_reset 1 2 4 620J 230 960J 220 NJ 220 1790
preplace netloc Net 1 6 1 2180J 900n
preplace netloc Net1 1 6 1 2190J 920n
preplace netloc axi_i2c_ctrl_bendlab_0_bl_data_o 1 6 1 2170 90n
preplace netloc axi_i2c_ctrl_bendlab_0_led 1 6 1 2200J 940n
preplace netloc bl_L1_1 1 0 6 NJ 1110 NJ 1110 NJ 1110 NJ 1110 NJ 1110 1770J
preplace netloc bl_L2_1 1 0 6 NJ 1270 NJ 1270 NJ 1270 NJ 1270 NJ 1270 1770J
preplace netloc bl_L3_1 1 0 6 NJ 1430 NJ 1430 NJ 1430 NJ 1430 NJ 1430 1770J
preplace netloc bl_L4_1 1 0 6 NJ 1590 NJ 1590 NJ 1590 NJ 1590 NJ 1590 1770J
preplace netloc axi_i2c_ctrl_bendlab_1_bl_data_o 1 6 1 2160 450n
preplace netloc axi_i2c_ctrl_bendlab_2_bl_data_o 1 6 1 2150 590n
preplace netloc axi_i2c_ctrl_bendlab_3_bl_data_o 1 6 1 2140 730n
preplace netloc axi_i2c_ctrl_bendlab_4_bl_data_o 1 6 1 2130 870n
preplace netloc Net2 1 6 1 2190J 1060n
preplace netloc Net3 1 6 1 2200J 1080n
preplace netloc Net4 1 6 1 2190J 1220n
preplace netloc Net5 1 6 1 2200J 1240n
preplace netloc Net6 1 6 1 2190J 1380n
preplace netloc Net7 1 6 1 2200J 1400n
preplace netloc Net8 1 6 1 2190J 1540n
preplace netloc Net9 1 6 1 2200J 1560n
preplace netloc fixed_200mhz_1 1 0 1 NJ 280
preplace netloc microblaze_0_debug 1 3 1 920 90n
preplace netloc microblaze_0_dlmb_1 1 4 1 N 80
preplace netloc microblaze_0_ilmb_1 1 4 1 N 100
preplace netloc axi_uartlite_0_UART 1 6 1 NJ 290
preplace netloc microblaze_0_M_AXI_DP 1 4 1 1450 120n
preplace netloc microblaze_0_axi_periph_M00_AXI 1 5 1 1780 60n
preplace netloc microblaze_0_axi_periph_M01_AXI 1 5 1 1800 280n
preplace netloc microblaze_0_axi_periph_M02_AXI 1 2 4 620 10 NJ 10 NJ 10 1770
preplace netloc microblaze_0_axi_periph_M03_AXI 1 5 1 1840 420n
preplace netloc microblaze_0_axi_periph_M04_AXI 1 5 1 1840 480n
preplace netloc microblaze_0_axi_periph_M05_AXI 1 5 1 1830 500n
preplace netloc microblaze_0_axi_periph_M06_AXI 1 5 1 1820 520n
levelinfo -pg 1 0 130 420 770 1200 1620 1990 2220
pagesize -pg 1 -db -bbox -sgen -140 0 2420 1740
"
}

  # Restore current instance
  current_bd_instance $oldCurInst

  validate_bd_design
  save_bd_design
  close_bd_design $design_name 
}
# End of cr_bd_design_1()
cr_bd_design_1 ""
set_property REGISTERED_WITH_MANAGER "1" [get_files design_1.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files design_1.bd ] 

#call make_wrapper to create wrapper files
if { [get_property IS_LOCKED [ get_files -norecurse design_1.bd] ] == 1  } {
  import_files -fileset sources_1 [file normalize "${origin_dir}hw/sources_1/bd/design_1_wrapper.v" ]
} else {
  set wrapper_path [make_wrapper -fileset sources_1 -files [ get_files -norecurse design_1.bd] -top]
  add_files -norecurse -fileset sources_1 $wrapper_path
}


set idrFlowPropertiesConstraints ""
catch {
 set idrFlowPropertiesConstraints [get_param runs.disableIDRFlowPropertyConstraints]
 set_param runs.disableIDRFlowPropertyConstraints 1
}

# Create 'synth_1' run (if not found)
if {[string equal [get_runs -quiet synth_1] ""]} {
    create_run -name synth_1 -part xc7a200tfbg484-1 -flow {Vivado Synthesis 2023} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset constrs_1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1]
  set_property flow "Vivado Synthesis 2023" [get_runs synth_1]
}
set obj [get_runs synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth_1
}
set obj [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs synth_1]
set_property -name "auto_incremental_checkpoint" -value "1" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# set the current synth run
current_run -synthesis [get_runs synth_1]

# Create 'impl_1' run (if not found)
if {[string equal [get_runs -quiet impl_1] ""]} {
    create_run -name impl_1 -part xc7a200tfbg484-1 -flow {Vivado Implementation 2023} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_1]
  set_property flow "Vivado Implementation 2023" [get_runs impl_1]
}
set obj [get_runs impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_1]
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# set the current impl run
current_run -implementation [get_runs impl_1]
catch {
 if { $idrFlowPropertiesConstraints != {} } {
   set_param runs.disableIDRFlowPropertyConstraints $idrFlowPropertiesConstraints
 }
}

puts "INFO: Project created:${_xil_proj_name_}"
# Create 'drc_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "drc_1" ] ] ""]} {
create_dashboard_gadget -name {drc_1} -type drc
}
set obj [get_dashboard_gadgets [ list "drc_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_drc_0" -objects $obj

# Create 'methodology_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "methodology_1" ] ] ""]} {
create_dashboard_gadget -name {methodology_1} -type methodology
}
set obj [get_dashboard_gadgets [ list "methodology_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_methodology_0" -objects $obj

# Create 'power_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "power_1" ] ] ""]} {
create_dashboard_gadget -name {power_1} -type power
}
set obj [get_dashboard_gadgets [ list "power_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_power_0" -objects $obj

# Create 'timing_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "timing_1" ] ] ""]} {
create_dashboard_gadget -name {timing_1} -type timing
}
set obj [get_dashboard_gadgets [ list "timing_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_timing_summary_0" -objects $obj

# Create 'utilization_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_1" ] ] ""]} {
create_dashboard_gadget -name {utilization_1} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_1" ] ]
set_property -name "reports" -value "synth_1#synth_1_synth_report_utilization_0" -objects $obj
set_property -name "run.step" -value "synth_design" -objects $obj
set_property -name "run.type" -value "synthesis" -objects $obj

# Create 'utilization_2' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_2" ] ] ""]} {
create_dashboard_gadget -name {utilization_2} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_2" ] ]
set_property -name "reports" -value "impl_1#impl_1_place_report_utilization_0" -objects $obj

move_dashboard_gadget -name {utilization_1} -row 0 -col 0
move_dashboard_gadget -name {power_1} -row 1 -col 0
move_dashboard_gadget -name {drc_1} -row 2 -col 0
move_dashboard_gadget -name {timing_1} -row 0 -col 1
move_dashboard_gadget -name {utilization_2} -row 1 -col 1
move_dashboard_gadget -name {methodology_1} -row 2 -col 1
